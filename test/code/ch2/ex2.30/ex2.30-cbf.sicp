(%ex "2.30")

; exercise 2.30, page 112

(define (square n) (* n n))

(define (square-tree tree)
  (cond ((null? tree) nil)
        ((pair? tree)
         (cons (square-tree (car tree)) (square-tree (cdr tree))))
        (else (square tree))))

(let ((tree (list 1
                  (list 2 (list 3 4) 5)
                  (list 6 7))))
  (display "square-tree:")(newline)
  (display "  Tree:     ")(display tree)(newline)
  (display "  Expected: (1 (4 (9 16) 25) (36 49))")(newline)
  (display "  Got:      ")(display (square-tree tree)))
