(%ex "2.17")

; section 2.2.1, page 99

(cons 1
      (cons 2
            (cons 3
                  (cons 4 nil))))

; section 2.2.1, page 100

(define one-through-four (list 1 2 3 4))

one-through-four
(car one-through-four)
(cdr one-through-four)

; section 2.2.1, page 101

(car (cdr one-through-four))
(cons 10 one-through-four)
(cons 5 one-through-four)

(define (list-ref items n)
  (if (= n 0)
      (car items)
      (list-ref (cdr items) (- n 1))))
(define squares (list 1 4 9 16 25))
(list-ref squares 3)

; section 2.2.1, page 102

(define (length items)
  (if (null? items)
      0
      (+ 1 (length (cdr items)))))
(define odds (list 1 3 5 7))
(length odds)
(define (length items)
  (define (length-iter a count)
    (if (null? a)
        count
        (length-iter (cdr a) (+ 1 count))))
  (length-iter items 0))
(length odds)

(define (append list1 list2)
  (if (null? list1)
      list2
      (cons (car list1) (append (cdr list1) list2))))

(append squares odds)
(append odds squares)
