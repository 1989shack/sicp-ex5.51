(%ex "2.21")

; exercise 2.21, page 106

(define (square-list-rec items)
  (if (null? items)
      nil
      (cons (* (car items) (car items)) (square-list-rec (cdr items)))))

(define (square-list-map items)
  (map (lambda (x) (* x x)) items))

(newline)
(let ((items (list 0 1 2 3 4 5 6 7 8)))
  (display "Items: ")(display items)(newline)
  (display "  square recurive: ")(display (square-list-rec items))(newline)
  (display "  square with map: ")(display (square-list-map items))(newline))
