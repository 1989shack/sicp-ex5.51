(%ex "2.10")

; exercise 2.10, page 95

(define (make-interval a b) (cons a b))

(define (upper-bound a)
  (let ((x (car a))
        (y (cdr a)))
    (if (> x y) x y)))

(define (lower-bound a)
  (let ((x (car a))
        (y (cdr a)))
    (if (< x y) x y)))

(define (mul-interval x y)
  (let ((p1 (* (lower-bound x) (lower-bound y)))
        (p2 (* (lower-bound x) (upper-bound y)))
        (p3 (* (upper-bound x) (lower-bound y)))
        (p4 (* (upper-bound x) (upper-bound y))))
    (make-interval (min p1 p2 p3 p4)
                   (max p1 p2 p3 p4))))
(define (div-interval-unsafe x y)
  (mul-interval x
                (make-interval (/ 1.0 (upper-bound y))
                               (/ 1.0 (lower-bound y)))))

(define (div-interval x y)
  (if (>= 0 (* (lower-bound y) (upper-bound y)))
          (error "Cannot do interval division when divisor includes zero")
          (div-interval-unsafe x y)))

(let ((tenish (make-interval 9 11))
      (hundredish (make-interval 99 101))
      (zeroish (make-interval -1 1)))
  (display "Orignal 100ish / 10ish: ")
    (display (div-interval-unsafe hundredish tenish)) (newline)
  (display "New 100ish / 10ish: ")
    (display (div-interval hundredish tenish)) (newline)
  (display "Original 100ish / 0ish: ")
    (display (div-interval-unsafe hundredish zeroish)) (newline)
  (display "New 100ish / 0ish: ") (display (div-interval hundredish zeroish)))
