(%ex "2.2")

; exercise 2.2, page 89

(define (make-point x y)
  (cons x y))

(define (x-point p)
  (car p))

(define (y-point p)
  (cdr p))

(define (make-segment start end)
  (cons start end))

(define (start-segment seg)
  (car seg))

(define (end-segment seg)
  (cdr seg))

(define (midpoint-segment seg)
  (make-point
   (* (/ 1 2) (+ (x-point (start-segment seg)) (x-point (end-segment seg))))
   (* (/ 1 2) (+ (y-point (start-segment seg)) (y-point (end-segment seg))))))

(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))

(let((start (make-point -2 4))
     (end (make-point 3 -5)))
  (let ((seg (make-segment start end)))
    (display "Start: ")
    (display start)
    (display " End: ")
    (display end)
    (newline)
    (display "Midpoint: ")
    (display (midpoint-segment seg))))
