; section 1.1.1, page 5,
486

; section 1.1.1, page 6
(+ 137 349)
(- 1000 334)
(* 5 99)
(/ 10 5)
(+ 2.7 10)
(+ 21 35 12 7)
(* 25 4 12)
(+ (* 3 5) (- 10 6))

; section 1.1.1, page 7
(+ (* 3 (+ (* 2 4) (+ 3 5))) (+ (- 10 7) 6))
(+ (* 3
      (+ (* 2 4)
         (+ 3 5)))
   (+ (- 10 7)
      6))


; section 1.1.2, page 7
(define size 2)

; section 1.1.2, page 8
size
(* 5 size)
(define pi 3.14159)
(define radius 10)
(* pi (* radius radius))
(define circumference (* 2 pi radius))
circumference

; section 1.1.3, page 9
(* (+ 2 (* 4 6))
   (+ 3 5 7))

; section 1.1.4, page 12
(define (square x) (* x x))

; section 1.1.4, page 13
(square 21)
(square (+ 2 5))
(square (square 3))
(define (sum-of-squares x y)
  (+ (square x) (square y)))
(sum-of-squares 3 4)
(define (f a)
  (sum-of-squares (+ a 1) (* a 2)))
(f 5)

; section 1.1.6, page 17
(define (abs x)
  (cond ((> x 0) x)
        ((= x 0) 0)
        ((< x 0) (- x))))
(abs -1) (abs -0) (abs 1)       ; non-text

; section 1.1.6, page 18
(define (abs x)
  (cond ((< x 0) (- x))
        (else x)))
(abs -2) (abs 0) (abs 2)        ; non-text

(define (abs x)
  (if (< x 0)
      (- x)
      x))
(abs -3) (abs 0) (abs 3)        ; non-text


; section 1.1.6, page 19
(define x 7)                    ; non-text
(and (> x 5) (< x 10))

; section 1.1.6, page 20
(define (>= x y)
  (or (> x y) (= x y)))
(>= 1 2) (>= 2 2) (>= 2 1)      ; non-text
(define (>= x y)
  (not (< x y)))
(>= 1 2) (>= 2 2) (>= 2 1)      ; non-text
