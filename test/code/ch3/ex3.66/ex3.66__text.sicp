(%ex "3.66")

; section 3.5.3, p339

(define (interleave s1 s2)
  (if (stream-null? s1)
      s2
      (cons-stream (stream-car s1)
                   (interleave s2 (stream-cdr s1)))))

(define (pairs s t)
  (cons-stream
   (list (stream-car s) (stream-car t))
   (interleave
    (stream-map (lambda (x) (list (stream-car s) x))
                (stream-cdr t))
    (pairs (stream-cdr s) (stream-cdr t)))))

(define int-pairs (pairs integers integers))

(define prime-sum-pairs
  (stream-filter (lambda (pair)
                 (prime? (+ (car pair) (cadr pair))))
                 int-pairs))

(display-stream (take prime-sum-pairs 20))
