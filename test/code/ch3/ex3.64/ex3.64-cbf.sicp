(%ex "3.64")

; exercise 3.64, p338

(define (stream-limit S tolerance)
  (let ((a (stream-car S))
        (b (stream-car (stream-cdr S))))
    (if (< (abs (- a b)) tolerance)
        b
        (stream-limit (stream-cdr S) tolerance))))

(define (average a b)
  (/ (+ a b) 2))

(define (sqrt-improve guess x)
  (average guess (/ x guess)))

(define (sqrt-stream x)
  (define guesses
    (cons-stream 1.0
                 (stream-map (lambda (guess)
                               (sqrt-improve guess x))
                             guesses)))
  guesses)

(define (sqrt x tolerance)
  (stream-limit (sqrt-stream x) tolerance))

(display-line "Expect: 1.41421356237")
(display-line "got:    ") (display (sqrt 2 0.000000001))
