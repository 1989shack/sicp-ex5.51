(%ex "3.05")

; exercise 3.05, page 228

(define rand-init (inc (runtime)))
(define rand-mod 2147483647)

(define rand-update
  (lambda (x)
    (let ((a 16807)
          (m rand-mod))
      (modulo
       (* x a)
       m))))

(define rand
  (let ((x rand-init))
    (lambda ()
      (set! x (rand-update x))
      x)))

(define (random range)
  (/ (* (rand) range) rand-mod))

(define (random-in-range low high)
  (let ((range (- high low)))
    (+ low (random range))))

(define (monte-carlo trials experiment)
  (define (iter trials-remaining trials-passed)
    (cond ((= trials-remaining 0)
           (/ trials-passed trials))
          ((experiment)
           (iter (- trials-remaining 1) (+ trials-passed 1)))
          (else
           (iter (- trials-remaining 1) trials-passed))))
  (iter trials 0))

(define (test-below low high cut-off)
  (> cut-off (random-in-range low high)))

(define trials 1000)

(display "Checking how many randoms between 0 and 1 are less than 0.1: ")
(+ 0.0 (monte-carlo trials (lambda () (test-below 0 1 0.1))))

(display "Checking how many randoms between 0 and 1 are less than 0.5: ")
(+ 0.0 (monte-carlo trials (lambda () (test-below 0 1 0.5))))

(display "Checking how many randoms between 0 and 1 are less than 0.9: ")
(+ 0.0 (monte-carlo trials (lambda () (test-below 0 1 0.9))))

(display "Checking how many randoms between -1 and 1 are less than 0: ")
(+ 0.0 (monte-carlo trials (lambda () (test-below -1 1 0))))

(define (estimate-integral P x1 x2 y1 y2 trials)
  (define (experiment)
    (let ((x (random-in-range x1 x2))
          (y (random-in-range y1 y2)))
      (P x y)))
  (let ((area-of-rectangle (* (- x2 x1) (- y2 y1)))
        (proportion-thats-integral (monte-carlo trials experiment)))
        (* 1.0 area-of-rectangle proportion-thats-integral)))

(define (estimate-pi trials)
  ;; working with a circle of radius 1 centered on the origin.
  (define (is-in-circle x y)
    (> 1 (+ (* x x) (* y y))))
  (estimate-integral is-in-circle -1 1 -1 1 trials))

(display "Estimating pi ...")(newline)
(estimate-pi trials)
